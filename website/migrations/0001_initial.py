# Generated by Django 5.2.5 on 2025-08-13 10:22

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#3B82F6', help_text='Hex color code', max_length=7)),
                ('meta_title', models.CharField(blank=True, help_text='SEO title for category pages', max_length=60)),
                ('meta_description', models.TextField(blank=True, help_text='SEO description for category pages', max_length=160)),
                ('meta_keywords', models.CharField(blank=True, help_text='SEO keywords for category pages', max_length=200)),
                ('schema_markup', models.JSONField(default=dict, help_text='JSON-LD schema markup for category pages')),
            ],
            options={
                'verbose_name_plural': 'Blog categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BlogTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('meta_title', models.CharField(blank=True, help_text='SEO title for tag pages', max_length=60)),
                ('meta_description', models.TextField(blank=True, help_text='SEO description for tag pages', max_length=160)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('company', models.CharField(blank=True, max_length=200)),
                ('service_interest', models.CharField(blank=True, max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
                ('unsubscribed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-subscribed_at'],
            },
        ),
        migrations.CreateModel(
            name='PortfolioCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('meta_title', models.CharField(blank=True, help_text='SEO title for category pages', max_length=60)),
                ('meta_description', models.TextField(blank=True, help_text='SEO description for category pages', max_length=160)),
                ('meta_keywords', models.CharField(blank=True, help_text='SEO keywords for category pages', max_length=200)),
                ('schema_markup', models.JSONField(default=dict, help_text='JSON-LD schema markup for category pages')),
            ],
            options={
                'verbose_name_plural': 'Portfolio categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SEOSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='DigitalPro', max_length=200)),
                ('site_description', models.TextField(blank=True)),
                ('site_keywords', models.CharField(blank=True, max_length=500)),
                ('organization_schema', models.JSONField(default=dict, help_text='Organization schema markup')),
                ('website_schema', models.JSONField(default=dict, help_text='Website schema markup')),
                ('default_og_image', models.ImageField(blank=True, null=True, upload_to='seo/')),
                ('twitter_creator', models.CharField(blank=True, max_length=100)),
                ('twitter_site', models.CharField(blank=True, max_length=100)),
                ('google_analytics_id', models.CharField(blank=True, max_length=50)),
                ('google_tag_manager_id', models.CharField(blank=True, max_length=50)),
                ('facebook_pixel_id', models.CharField(blank=True, max_length=50)),
                ('google_search_console_verification', models.CharField(blank=True, max_length=100)),
                ('bing_webmaster_verification', models.CharField(blank=True, max_length=100)),
                ('enable_amp', models.BooleanField(default=False, help_text='Enable AMP support')),
                ('enable_structured_data', models.BooleanField(default=True, help_text='Enable automatic structured data')),
                ('enable_social_sharing', models.BooleanField(default=True, help_text='Enable social media optimization')),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'SEO Settings',
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='DigitalPro', max_length=200)),
                ('site_description', models.TextField(blank=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='site/')),
                ('favicon', models.ImageField(blank=True, null=True, upload_to='site/')),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_address', models.TextField(blank=True)),
                ('facebook_url', models.URLField(blank=True)),
                ('twitter_url', models.URLField(blank=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('instagram_url', models.URLField(blank=True)),
                ('meta_title', models.CharField(blank=True, max_length=200)),
                ('meta_description', models.TextField(blank=True)),
                ('meta_keywords', models.TextField(blank=True)),
                ('google_analytics_code', models.TextField(blank=True)),
                ('facebook_pixel_code', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Site Settings',
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('excerpt', models.TextField(max_length=500)),
                ('content', models.TextField()),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='blog/')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('published_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_featured', models.BooleanField(default=False)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('meta_title', models.CharField(blank=True, help_text='Custom SEO title (defaults to post title)', max_length=60)),
                ('meta_description', models.TextField(blank=True, help_text='Custom SEO description (defaults to excerpt)', max_length=160)),
                ('meta_keywords', models.CharField(blank=True, help_text='SEO keywords separated by commas', max_length=200)),
                ('canonical_url', models.URLField(blank=True, help_text='Canonical URL if different from post URL')),
                ('schema_markup', models.JSONField(default=dict, help_text='Custom JSON-LD schema markup')),
                ('og_title', models.CharField(blank=True, help_text='Open Graph title for social sharing', max_length=100)),
                ('og_description', models.TextField(blank=True, help_text='Open Graph description for social sharing', max_length=200)),
                ('og_image', models.ImageField(blank=True, help_text='Open Graph image for social sharing', null=True, upload_to='blog/og/')),
                ('og_type', models.CharField(choices=[('website', 'Website'), ('article', 'Article'), ('blog', 'Blog Post'), ('news.article', 'News Article'), ('tech.article', 'Tech Article'), ('howto', 'How-To Guide'), ('review', 'Review'), ('creative.work', 'Creative Work')], default='article', max_length=50)),
                ('og_site_name', models.CharField(blank=True, help_text='Site name for Open Graph', max_length=100)),
                ('og_locale', models.CharField(default='en_US', help_text='Locale for Open Graph', max_length=10)),
                ('og_url', models.URLField(blank=True, help_text='Canonical URL for Open Graph')),
                ('og_author', models.CharField(blank=True, help_text='Author for Open Graph', max_length=100)),
                ('og_published_time', models.DateTimeField(blank=True, help_text='Published time for Open Graph', null=True)),
                ('og_modified_time', models.DateTimeField(blank=True, help_text='Modified time for Open Graph', null=True)),
                ('og_section', models.CharField(blank=True, help_text='Section for Open Graph', max_length=100)),
                ('og_tag', models.CharField(blank=True, help_text='Tags for Open Graph', max_length=200)),
                ('twitter_card', models.CharField(choices=[('summary', 'Summary'), ('summary_large_image', 'Summary Large Image'), ('app', 'App'), ('player', 'Player')], default='summary_large_image', max_length=20)),
                ('twitter_title', models.CharField(blank=True, help_text='Twitter title (defaults to og_title)', max_length=100)),
                ('twitter_description', models.TextField(blank=True, help_text='Twitter description (defaults to og_description)', max_length=200)),
                ('twitter_image', models.ImageField(blank=True, help_text='Twitter image (defaults to og_image)', null=True, upload_to='blog/twitter/')),
                ('twitter_creator', models.CharField(blank=True, help_text='Twitter creator handle (@username)', max_length=100)),
                ('twitter_site', models.CharField(blank=True, help_text='Twitter site handle (@username)', max_length=100)),
                ('linkedin_title', models.CharField(blank=True, help_text='LinkedIn title (defaults to og_title)', max_length=100)),
                ('linkedin_description', models.TextField(blank=True, help_text='LinkedIn description (defaults to og_description)', max_length=200)),
                ('linkedin_image', models.ImageField(blank=True, help_text='LinkedIn image (defaults to og_image)', null=True, upload_to='blog/linkedin/')),
                ('whatsapp_title', models.CharField(blank=True, help_text='WhatsApp title (defaults to og_title)', max_length=100)),
                ('whatsapp_description', models.TextField(blank=True, help_text='WhatsApp description (defaults to og_description)', max_length=200)),
                ('whatsapp_image', models.ImageField(blank=True, help_text='WhatsApp image (defaults to og_image)', null=True, upload_to='blog/whatsapp/')),
                ('pinterest_title', models.CharField(blank=True, help_text='Pinterest title (defaults to og_title)', max_length=100)),
                ('pinterest_description', models.TextField(blank=True, help_text='Pinterest description (defaults to og_description)', max_length=200)),
                ('pinterest_image', models.ImageField(blank=True, help_text='Pinterest image (defaults to og_description)', null=True, upload_to='blog/pinterest/')),
                ('instagram_title', models.CharField(blank=True, help_text='Instagram title (defaults to og_title)', max_length=100)),
                ('instagram_description', models.TextField(blank=True, help_text='Instagram description (defaults to og_description)', max_length=200)),
                ('instagram_image', models.ImageField(blank=True, help_text='Instagram image (defaults to og_image)', null=True, upload_to='blog/instagram/')),
                ('estimated_reading_time', models.PositiveIntegerField(blank=True, help_text='Estimated reading time in minutes', null=True)),
                ('internal_links', models.JSONField(default=list, help_text='List of internal links to other blog posts')),
                ('external_links', models.JSONField(default=list, help_text='List of external links with descriptions')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='website.blogcategory')),
                ('related_posts', models.ManyToManyField(blank=True, help_text='Manually select related posts', to='website.blogpost')),
                ('tags', models.ManyToManyField(blank=True, to='website.blogtag')),
            ],
            options={
                'ordering': ['-published_date'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('short_description', models.TextField(max_length=300)),
                ('full_description', models.TextField()),
                ('icon', models.CharField(help_text='Icon class or SVG path', max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='services/')),
                ('features', models.JSONField(default=list, help_text='List of service features')),
                ('process_steps', models.JSONField(default=list, help_text='List of process steps')),
                ('benefits', models.JSONField(default=list, help_text='List of benefits')),
                ('pricing', models.CharField(blank=True, max_length=100)),
                ('is_featured', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('meta_title', models.CharField(blank=True, help_text='Custom SEO title (defaults to service title)', max_length=60)),
                ('meta_description', models.TextField(blank=True, help_text='Custom SEO description (defaults to short description)', max_length=160)),
                ('meta_keywords', models.CharField(blank=True, help_text='SEO keywords separated by commas', max_length=200)),
                ('canonical_url', models.URLField(blank=True, help_text='Canonical URL if different from service URL')),
                ('schema_markup', models.JSONField(default=dict, help_text='Custom JSON-LD schema markup')),
                ('og_title', models.CharField(blank=True, help_text='Open Graph title for social sharing', max_length=100)),
                ('og_description', models.TextField(blank=True, help_text='Open Graph description for social sharing', max_length=200)),
                ('og_image', models.ImageField(blank=True, help_text='Open Graph image for social sharing', null=True, upload_to='services/og/')),
                ('og_type', models.CharField(choices=[('website', 'Website'), ('article', 'Article'), ('product', 'Product'), ('service', 'Service'), ('business.business', 'Business'), ('place', 'Place'), ('profile', 'Profile')], default='website', max_length=50)),
                ('og_site_name', models.CharField(blank=True, help_text='Site name for Open Graph', max_length=100)),
                ('og_locale', models.CharField(default='en_US', help_text='Locale for Open Graph', max_length=10)),
                ('og_url', models.URLField(blank=True, help_text='Canonical URL for Open Graph')),
                ('twitter_card', models.CharField(choices=[('summary', 'Summary'), ('summary_large_image', 'Summary Large Image'), ('app', 'App'), ('player', 'Player')], default='summary_large_image', max_length=20)),
                ('twitter_title', models.CharField(blank=True, help_text='Twitter title (defaults to og_title)', max_length=100)),
                ('twitter_description', models.TextField(blank=True, help_text='Twitter description (defaults to og_description)', max_length=200)),
                ('twitter_image', models.ImageField(blank=True, help_text='Twitter image (defaults to og_image)', null=True, upload_to='services/twitter/')),
                ('twitter_creator', models.CharField(blank=True, help_text='Twitter creator handle (@username)', max_length=100)),
                ('twitter_site', models.CharField(blank=True, help_text='Twitter site handle (@username)', max_length=100)),
                ('linkedin_title', models.CharField(blank=True, help_text='LinkedIn title (defaults to og_title)', max_length=100)),
                ('linkedin_description', models.TextField(blank=True, help_text='LinkedIn description (defaults to og_description)', max_length=200)),
                ('linkedin_image', models.ImageField(blank=True, help_text='LinkedIn image (defaults to og_image)', null=True, upload_to='services/linkedin/')),
                ('whatsapp_title', models.CharField(blank=True, help_text='WhatsApp title (defaults to og_title)', max_length=100)),
                ('whatsapp_description', models.TextField(blank=True, help_text='WhatsApp description (defaults to og_description)', max_length=200)),
                ('whatsapp_image', models.ImageField(blank=True, help_text='WhatsApp image (defaults to og_image)', null=True, upload_to='services/whatsapp/')),
                ('pinterest_title', models.CharField(blank=True, help_text='Pinterest title (defaults to og_title)', max_length=100)),
                ('pinterest_description', models.TextField(blank=True, help_text='Pinterest description (defaults to og_description)', max_length=200)),
                ('pinterest_image', models.ImageField(blank=True, help_text='Pinterest image (defaults to og_image)', null=True, upload_to='services/pinterest/')),
                ('instagram_title', models.CharField(blank=True, help_text='Instagram title (defaults to og_title)', max_length=100)),
                ('instagram_description', models.TextField(blank=True, help_text='Instagram description (defaults to og_description)', max_length=200)),
                ('instagram_image', models.ImageField(blank=True, help_text='Instagram image (defaults to og_image)', null=True, upload_to='services/instagram/')),
                ('service_area', models.CharField(blank=True, help_text='Geographic area served', max_length=200)),
                ('service_industry', models.CharField(blank=True, help_text='Target industries', max_length=200)),
                ('service_duration', models.CharField(blank=True, help_text='Typical project duration', max_length=100)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this service is active and visible')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('related_services', models.ManyToManyField(blank=True, help_text='Related services', to='website.service')),
            ],
            options={
                'ordering': ['order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('client_name', models.CharField(max_length=200)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='portfolio/')),
                ('short_description', models.TextField(max_length=300)),
                ('full_description', models.TextField()),
                ('challenge', models.TextField(help_text="What was the client's challenge?")),
                ('solution', models.TextField(help_text='How did we solve it?')),
                ('implementation', models.TextField(help_text='What was our approach?')),
                ('results_summary', models.TextField(help_text='Summary of results achieved')),
                ('metrics', models.JSONField(default=list, help_text='List of key metrics and results')),
                ('before_image', models.ImageField(blank=True, null=True, upload_to='portfolio/before/')),
                ('after_image', models.ImageField(blank=True, null=True, upload_to='portfolio/after/')),
                ('technologies_used', models.JSONField(default=list, help_text='List of technologies used')),
                ('project_duration', models.CharField(blank=True, max_length=100)),
                ('team_size', models.CharField(blank=True, max_length=50)),
                ('client_testimonial', models.TextField(blank=True)),
                ('client_position', models.CharField(blank=True, max_length=100)),
                ('client_company', models.CharField(blank=True, max_length=200)),
                ('meta_title', models.CharField(blank=True, help_text='Custom SEO title (defaults to portfolio title)', max_length=60)),
                ('meta_description', models.TextField(blank=True, help_text='Custom SEO description (defaults to short description)', max_length=160)),
                ('meta_keywords', models.CharField(blank=True, help_text='SEO keywords separated by commas', max_length=200)),
                ('canonical_url', models.URLField(blank=True, help_text='Canonical URL if different from portfolio URL')),
                ('schema_markup', models.JSONField(default=dict, help_text='Custom JSON-LD schema markup')),
                ('project_type', models.CharField(choices=[('CreativeWork', 'Creative Work'), ('WebSite', 'Website'), ('MobileApplication', 'Mobile App'), ('DigitalMarketing', 'Digital Marketing Campaign'), ('Branding', 'Branding Project'), ('ContentCreation', 'Content Creation')], default='CreativeWork', max_length=50)),
                ('og_title', models.CharField(blank=True, help_text='Open Graph title for social sharing', max_length=100)),
                ('og_description', models.TextField(blank=True, help_text='Open Graph description for social sharing', max_length=200)),
                ('og_image', models.ImageField(blank=True, help_text='Open Graph image for social sharing', null=True, upload_to='portfolio/og/')),
                ('og_type', models.CharField(choices=[('website', 'Website'), ('article', 'Article'), ('product', 'Product'), ('creative.work', 'Creative Work'), ('business.business', 'Business'), ('place', 'Place'), ('profile', 'Profile')], default='website', max_length=50)),
                ('og_site_name', models.CharField(blank=True, help_text='Site name for Open Graph', max_length=100)),
                ('og_locale', models.CharField(default='en_US', help_text='Locale for Open Graph', max_length=10)),
                ('og_url', models.URLField(blank=True, help_text='Canonical URL for Open Graph')),
                ('twitter_card', models.CharField(choices=[('summary', 'Summary'), ('summary_large_image', 'Summary Large Image'), ('app', 'App'), ('player', 'Player')], default='summary_large_image', max_length=20)),
                ('twitter_title', models.CharField(blank=True, help_text='Twitter title (defaults to og_title)', max_length=100)),
                ('twitter_description', models.TextField(blank=True, help_text='Twitter description (defaults to og_description)', max_length=200)),
                ('twitter_image', models.ImageField(blank=True, help_text='Twitter image (defaults to og_image)', null=True, upload_to='portfolio/twitter/')),
                ('twitter_creator', models.CharField(blank=True, help_text='Twitter creator handle (@username)', max_length=100)),
                ('twitter_site', models.CharField(blank=True, help_text='Twitter site handle (@username)', max_length=100)),
                ('linkedin_title', models.CharField(blank=True, help_text='LinkedIn title (defaults to og_title)', max_length=100)),
                ('linkedin_description', models.TextField(blank=True, help_text='LinkedIn description (defaults to og_description)', max_length=200)),
                ('linkedin_image', models.ImageField(blank=True, help_text='LinkedIn image (defaults to og_image)', null=True, upload_to='portfolio/linkedin/')),
                ('whatsapp_title', models.CharField(blank=True, help_text='WhatsApp title (defaults to og_title)', max_length=100)),
                ('whatsapp_description', models.TextField(blank=True, help_text='WhatsApp description (defaults to og_description)', max_length=200)),
                ('whatsapp_image', models.ImageField(blank=True, help_text='WhatsApp image (defaults to og_image)', null=True, upload_to='portfolio/whatsapp/')),
                ('pinterest_title', models.CharField(blank=True, help_text='Pinterest title (defaults to og_title)', max_length=100)),
                ('pinterest_description', models.TextField(blank=True, help_text='Pinterest description (defaults to og_description)', max_length=200)),
                ('pinterest_image', models.ImageField(blank=True, help_text='Pinterest image (defaults to og_image)', null=True, upload_to='portfolio/pinterest/')),
                ('instagram_title', models.CharField(blank=True, help_text='Instagram title (defaults to og_title)', max_length=100)),
                ('instagram_description', models.TextField(blank=True, help_text='Instagram description (defaults to og_description)', max_length=200)),
                ('instagram_image', models.ImageField(blank=True, help_text='Instagram image (defaults to og_image)', null=True, upload_to='portfolio/instagram/')),
                ('project_location', models.CharField(blank=True, help_text='Project location or target market', max_length=200)),
                ('project_industry', models.CharField(blank=True, help_text='Client industry', max_length=200)),
                ('project_budget', models.CharField(blank=True, help_text='Project budget range', max_length=100)),
                ('client_logo', models.ImageField(blank=True, help_text='Client company logo', null=True, upload_to='portfolio/clients/')),
                ('is_featured', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('related_portfolios', models.ManyToManyField(blank=True, help_text='Related portfolio items', to='website.portfolio')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolios', to='website.portfoliocategory')),
                ('related_services', models.ManyToManyField(blank=True, help_text='Services used in this project', related_name='case_studies', to='website.service')),
            ],
            options={
                'verbose_name_plural': 'Portfolios',
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('position', models.CharField(max_length=200)),
                ('bio', models.TextField()),
                ('photo', models.ImageField(blank=True, null=True, upload_to='team/')),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('linkedin', models.URLField(blank=True)),
                ('twitter', models.URLField(blank=True)),
                ('github', models.URLField(blank=True)),
                ('expertise', models.JSONField(default=list, help_text='List of areas of expertise')),
                ('experience_years', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('meta_title', models.CharField(blank=True, help_text='Custom SEO title (defaults to team member name)', max_length=60)),
                ('meta_description', models.TextField(blank=True, help_text='Custom SEO description (defaults to bio)', max_length=160)),
                ('meta_keywords', models.CharField(blank=True, help_text='SEO keywords separated by commas', max_length=200)),
                ('schema_markup', models.JSONField(default=dict, help_text='Custom JSON-LD schema markup')),
                ('og_title', models.CharField(blank=True, help_text='Open Graph title for social sharing', max_length=100)),
                ('og_description', models.TextField(blank=True, help_text='Open Graph description for social sharing', max_length=200)),
                ('og_image', models.ImageField(blank=True, help_text='Open Graph image for social sharing', null=True, upload_to='team/og/')),
                ('og_type', models.CharField(choices=[('website', 'Website'), ('article', 'Article'), ('profile', 'Profile'), ('person', 'Person'), ('business.business', 'Business')], default='profile', max_length=50)),
                ('og_site_name', models.CharField(blank=True, help_text='Site name for Open Graph', max_length=100)),
                ('og_locale', models.CharField(default='en_US', help_text='Locale for Open Graph', max_length=10)),
                ('og_url', models.URLField(blank=True, help_text='Canonical URL for Open Graph')),
                ('twitter_card', models.CharField(choices=[('summary', 'Summary'), ('summary_large_image', 'Summary Large Image'), ('app', 'App'), ('player', 'Player')], default='summary', max_length=20)),
                ('twitter_title', models.CharField(blank=True, help_text='Twitter title (defaults to og_title)', max_length=100)),
                ('twitter_description', models.TextField(blank=True, help_text='Twitter description (defaults to og_description)', max_length=200)),
                ('twitter_image', models.ImageField(blank=True, help_text='Twitter image (defaults to og_image)', null=True, upload_to='team/twitter/')),
                ('twitter_creator', models.CharField(blank=True, help_text='Twitter creator handle (@username)', max_length=100)),
                ('twitter_site', models.CharField(blank=True, help_text='Twitter site handle (@username)', max_length=100)),
                ('linkedin_title', models.CharField(blank=True, help_text='LinkedIn title (defaults to og_title)', max_length=100)),
                ('linkedin_description', models.TextField(blank=True, help_text='LinkedIn description (defaults to og_description)', max_length=200)),
                ('linkedin_image', models.ImageField(blank=True, help_text='LinkedIn image (defaults to og_image)', null=True, upload_to='team/linkedin/')),
                ('whatsapp_title', models.CharField(blank=True, help_text='WhatsApp title (defaults to og_title)', max_length=100)),
                ('whatsapp_description', models.TextField(blank=True, help_text='WhatsApp description (defaults to og_description)', max_length=200)),
                ('whatsapp_image', models.ImageField(blank=True, help_text='WhatsApp image (defaults to og_image)', null=True, upload_to='team/whatsapp/')),
                ('pinterest_title', models.CharField(blank=True, help_text='Pinterest title (defaults to og_title)', max_length=100)),
                ('pinterest_description', models.TextField(blank=True, help_text='Pinterest description (defaults to og_description)', max_length=200)),
                ('pinterest_image', models.ImageField(blank=True, help_text='Pinterest image (defaults to og_image)', null=True, upload_to='team/pinterest/')),
                ('instagram_title', models.CharField(blank=True, help_text='Instagram title (defaults to og_title)', max_length=100)),
                ('instagram_description', models.TextField(blank=True, help_text='Instagram description (defaults to og_description)', max_length=200)),
                ('instagram_image', models.ImageField(blank=True, help_text='Instagram image (defaults to og_image)', null=True, upload_to='team/instagram/')),
                ('certifications', models.JSONField(default=list, help_text='List of professional certifications')),
                ('education', models.JSONField(default=list, help_text='Educational background')),
                ('achievements', models.JSONField(default=list, help_text='Professional achievements and awards')),
                ('speaking_engagements', models.JSONField(default=list, help_text='Speaking engagements and presentations')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('authored_posts', models.ManyToManyField(blank=True, help_text='Blog posts authored by this team member', related_name='team_authors', to='website.blogpost')),
                ('featured_projects', models.ManyToManyField(blank=True, help_text='Portfolio projects this team member worked on', related_name='team_members', to='website.portfolio')),
                ('related_team_members', models.ManyToManyField(blank=True, help_text='Related team members', to='website.teammember')),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=200)),
                ('client_position', models.CharField(max_length=200)),
                ('client_company', models.CharField(max_length=200)),
                ('client_photo', models.ImageField(blank=True, null=True, upload_to='testimonials/')),
                ('content', models.TextField()),
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=5)),
                ('is_featured', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('meta_title', models.CharField(blank=True, help_text='Custom SEO title for testimonial pages', max_length=60)),
                ('meta_description', models.TextField(blank=True, help_text='Custom SEO description for testimonial pages', max_length=160)),
                ('schema_markup', models.JSONField(default=dict, help_text='Custom JSON-LD schema markup')),
                ('og_title', models.CharField(blank=True, help_text='Open Graph title for social sharing', max_length=100)),
                ('og_description', models.TextField(blank=True, help_text='Open Graph description for social sharing', max_length=200)),
                ('og_image', models.ImageField(blank=True, help_text='Open Graph image for social sharing', null=True, upload_to='testimonials/og/')),
                ('og_type', models.CharField(choices=[('website', 'Website'), ('article', 'Article'), ('review', 'Review'), ('business.business', 'Business'), ('place', 'Place')], default='website', max_length=50)),
                ('og_site_name', models.CharField(blank=True, help_text='Site name for Open Graph', max_length=100)),
                ('og_locale', models.CharField(default='en_US', help_text='Locale for Open Graph', max_length=10)),
                ('og_url', models.URLField(blank=True, help_text='Canonical URL for Open Graph')),
                ('twitter_card', models.CharField(choices=[('summary', 'Summary'), ('summary_large_image', 'Summary Large Image'), ('app', 'App'), ('player', 'Player')], default='summary', max_length=20)),
                ('twitter_title', models.CharField(blank=True, help_text='Twitter title (defaults to og_title)', max_length=100)),
                ('twitter_description', models.TextField(blank=True, help_text='Twitter description (defaults to og_description)', max_length=200)),
                ('twitter_image', models.ImageField(blank=True, help_text='Twitter image (defaults to og_image)', null=True, upload_to='testimonials/twitter/')),
                ('twitter_creator', models.CharField(blank=True, help_text='Twitter creator handle (@username)', max_length=100)),
                ('twitter_site', models.CharField(blank=True, help_text='Twitter site handle (@username)', max_length=100)),
                ('linkedin_title', models.CharField(blank=True, help_text='LinkedIn title (defaults to og_title)', max_length=100)),
                ('linkedin_description', models.TextField(blank=True, help_text='LinkedIn description (defaults to og_description)', max_length=200)),
                ('linkedin_image', models.ImageField(blank=True, help_text='LinkedIn image (defaults to og_image)', null=True, upload_to='testimonials/linkedin/')),
                ('whatsapp_title', models.CharField(blank=True, help_text='WhatsApp title (defaults to og_title)', max_length=100)),
                ('whatsapp_description', models.TextField(blank=True, help_text='WhatsApp description (defaults to og_description)', max_length=200)),
                ('whatsapp_image', models.ImageField(blank=True, help_text='WhatsApp image (defaults to og_image)', null=True, upload_to='testimonials/whatsapp/')),
                ('pinterest_title', models.CharField(blank=True, help_text='Pinterest title (defaults to og_title)', max_length=100)),
                ('pinterest_description', models.TextField(blank=True, help_text='Pinterest description (defaults to og_description)', max_length=200)),
                ('pinterest_image', models.ImageField(blank=True, help_text='Pinterest image (defaults to og_description)', null=True, upload_to='testimonials/pinterest/')),
                ('instagram_title', models.CharField(blank=True, help_text='Instagram title (defaults to og_title)', max_length=100)),
                ('instagram_description', models.TextField(blank=True, help_text='Instagram description (defaults to og_description)', max_length=200)),
                ('instagram_image', models.ImageField(blank=True, help_text='Instagram image (defaults to og_image)', null=True, upload_to='testimonials/instagram/')),
                ('project_reference', models.CharField(blank=True, help_text='Reference to specific project', max_length=200)),
                ('service_category', models.CharField(blank=True, help_text='Service category this testimonial relates to', max_length=200)),
                ('testimonial_date', models.DateField(blank=True, help_text='Date when testimonial was given', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('related_portfolios', models.ManyToManyField(blank=True, help_text='Portfolio items this testimonial relates to', related_name='testimonials', to='website.portfolio')),
                ('related_services', models.ManyToManyField(blank=True, help_text='Services this testimonial relates to', related_name='testimonials', to='website.service')),
            ],
            options={
                'ordering': ['order', '-created_at'],
            },
        ),
    ]
